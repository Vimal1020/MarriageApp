{"ast":null,"code":"var _class;\nimport { delay, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/busy.service\";\nexport class LoadingInterceptor {\n  constructor(busySer, vice) {\n    this.busySer = busySer;\n  }\n  intercept(request, next) {\n    this.busyService.busy();\n    return next.handle(request).pipe(delay(1000), finalize(() => {\n      this.busyService.idle();\n    }));\n  }\n}\n_class = LoadingInterceptor;\n_class.ɵfac = function LoadingInterceptor_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["delay","finalize","LoadingInterceptor","constructor","busySer","vice","intercept","request","next","busyService","busy","handle","pipe","idle","factory","ɵfac"],"sources":["C:\\Vimal_Project\\MarriageApp\\client\\src\\app\\_interceptors\\loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busySer vice: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      delay(1000),\n      finalize(() =>{\n        this.busyService.idle();\n      }\n      )\n    );\n  }\n}\n"],"mappings":";AASA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;;;AAGhD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,OAAO,EAACC,IAAiB;IAAzB,KAAAD,OAAO,GAAPA,OAAO;EAAqB;EAEhDE,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAI,CAACC,WAAW,CAACC,IAAI,EAAE;IACvB,OAAOF,IAAI,CAACG,MAAM,CAACJ,OAAO,CAAC,CAACK,IAAI,CAC9BZ,KAAK,CAAC,IAAI,CAAC,EACXC,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACQ,WAAW,CAACI,IAAI,EAAE;IACzB,CAAC,CACA,CACF;EACH;;SAbWX,kBAAkB;;;;;SAAlBA,MAAkB;EAAAY,OAAA,EAAlBZ,MAAkB,CAAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}